{
    "title": "UniParc API Documentation",
    "endpoints": [
        {
            "name": "Search UniParc entries",
            "description": "Searches for UniParc entries based on various query parameters.",
            "method": "GET",
            "url": [
                "missing"
            ],
            "headers": [],
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "offset",
                    "type": "integer",
                    "description": "Offset, page starting point, with default value 0",
                    "default": 0,
                    "example": 0
                },
                {
                    "name": "size",
                    "type": "integer",
                    "description": "Page size with default value 100. When page size is -1, it returns all records and offset will be ignored",
                    "default": 100,
                    "example": 100
                },
                {
                    "name": "upi",
                    "type": "string",
                    "description": "UniParc ID (UPI). Comma separated values accepted up to 100",
                    "default": null,
                    "example": "UPI0000000001"
                },
                {
                    "name": "dbtype",
                    "type": "string",
                    "description": "Search by Cross reference database type, e.g EMBL, RefSeq, Ensembl, etc.",
                    "default": null,
                    "example": "EMBL"
                },
                {
                    "name": "accession",
                    "type": "string",
                    "description": "UniProt accession(s). Comma separated values accepted up to 100.",
                    "default": null,
                    "example": "P12345"
                },
                {
                    "name": "dbid",
                    "type": "string",
                    "description": "All UniParc cross reference accessions, e.g. AAC02967 (EMBL) or XP_006524055 (RefSeq). Comma separated values accepted up to 100.",
                    "default": null,
                    "example": "AAC02967"
                },
                {
                    "name": "gene",
                    "type": "string",
                    "description": "UniProt gene name. Comma separated values accepted up to 20.",
                    "default": null,
                    "example": "BRCA1"
                },
                {
                    "name": "protein",
                    "type": "string",
                    "description": "UniProt protein name",
                    "default": null,
                    "example": "Hemoglobin"
                },
                {
                    "name": "taxid",
                    "type": "string",
                    "description": "Organism taxon ID. Comma separated values accepted up to 20.",
                    "default": null,
                    "example": "9606"
                },
                {
                    "name": "organism",
                    "type": "string",
                    "description": "Organism name",
                    "default": null,
                    "example": "Homo sapiens"
                },
                {
                    "name": "sequencechecksum",
                    "type": "string",
                    "description": "Sequence CRC64 checksum. e.g. 4104A3A57D1B08E3",
                    "default": null,
                    "example": "4104A3A57D1B08E3"
                },
                {
                    "name": "ipr",
                    "type": "string",
                    "description": "Search by InterPro identifier(s). Comma separated values accepted up to 20.",
                    "default": null,
                    "example": "IPR000001"
                },
                {
                    "name": "signaturetype",
                    "type": "string",
                    "description": "Search by signature database type, e.g. SMART, SUPFAM, Pfam, PIRSF, PROSITE, etc. Comma separated values accepted up to 20.",
                    "default": null,
                    "example": "SMART"
                },
                {
                    "name": "signatureid",
                    "type": "string",
                    "description": "Search by signature database id, e.g. SM00044, SSF55073, PF00211, PIRSF039050, PS00452, etc. Comma separated values accepted up to 20.",
                    "default": null,
                    "example": "SM00044"
                },
                {
                    "name": "upid",
                    "type": "string",
                    "description": "UniProt proteome UPID(s). Comma separated values accepted up to 100.",
                    "default": null,
                    "example": "UP000005640"
                },
                {
                    "name": "seqLength",
                    "type": "string",
                    "description": "Sequence length. Sequence length can be a single length value such as 123 or range 123-234",
                    "default": null,
                    "example": "123-234"
                },
                {
                    "name": "rfDdtype",
                    "type": "string",
                    "description": "Response filter by Cross reference database type, e.g EMBL, RefSeq, Ensembl, etc. Comma separated values accepted.",
                    "default": null,
                    "example": "EMBL"
                },
                {
                    "name": "rfDbid",
                    "type": "string",
                    "description": "Response filter by all UniParc cross reference accessions, e.g. AAC02967 (EMBL) or XP_006524055 (RefSeq). Comma separated values accepted.",
                    "default": null,
                    "example": "AAC02967"
                },
                {
                    "name": "rfActive",
                    "type": "string",
                    "description": "Response filter by Active(true) or not Active(false) Cross reference.",
                    "default": null,
                    "example": "true"
                },
                {
                    "name": "rfTaxId",
                    "type": "string",
                    "description": "Response filter by organism taxon ID. Comma separated values accepted.",
                    "default": null,
                    "example": "9606"
                }
            ]
        }
    ]
}