# API Function Generator Prompt

Based on the provided API documentation, design Python functions that serve as a clean interface layer.

## Requirements
- Make the tool easy to understand and use. Make sure your proposed tool is **customizable**. Don't use dictionary as input parameter.
- **Self-contained**: Each function should be complete and independently usable. Don't propose utility functions.
- **Single API Response**: Each tool should achieve its purpose through a single API call and response. Avoid multi-step operations.
- **Business-focused**: Map to real-world use cases, not just API mechanics.
- **Comprehensive**: Cover all major API patterns and common use cases
- **Intuitive**: Use straightforward parameter names and appropriate defaults. 
- **Achievable**: Only propose tools that can be implemented by making one API request and returning the response.
- Don't propose irrelevant tools.

## Output Format
For each function provide:
- Function signature with descriptive parameters
- Brief description (1-2 sentences) of business purpose
- Don't include base URLs, auth token, headers in function parameter

Propose at most {tool_number} tools. Stop early if you think there are no more useful tools to propose.

API documentation:
{api_doc}